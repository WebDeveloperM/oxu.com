{"version":3,"file":"imask.cjs","sources":["../src/core/utils.ts","../src/core/action-details.ts","../src/core/holder.ts","../src/masked/factory.ts","../src/controls/mask-element.ts","../src/controls/html-mask-element.ts","../src/controls/html-input-mask-element.ts","../src/controls/html-contenteditable-mask-element.ts","../src/controls/input.ts","../src/core/change-details.ts","../src/core/continuous-tail-details.ts","../src/masked/base.ts","../src/masked/pattern/chunk-tail-details.ts","../src/masked/pattern/cursor.ts","../src/masked/pattern/fixed-definition.ts","../src/masked/pattern/input-definition.ts","../src/masked/regexp.ts","../src/masked/pattern.ts","../src/masked/range.ts","../src/masked/date.ts","../src/masked/dynamic.ts","../src/masked/enum.ts","../src/masked/function.ts","../src/masked/number.ts","../src/masked/pipe.ts","../src/index.ts"],"sourcesContent":["/** Checks if value is string */\nexport\nfunction isString (str: unknown): str is string {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nexport\nfunction isObject (obj: unknown): obj is object {\n  return typeof obj === 'object' && obj != null && obj?.constructor?.name === 'Object';\n}\n\nexport\nfunction pick<T extends Record<string, any>, K extends keyof T, V extends T[keyof T]> (\n  obj: T,\n  keys: K[] | ((v: V, k: K) => boolean),\n): Pick<T, K> {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return (Object.entries(obj) as unknown as Array<[K, V]>)\n    .reduce((acc, [k, v]) => {\n      if (keys(v, k)) acc[k] = v;\n      return acc;\n    }, {} as any);\n}\n\n/** Direction */\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n} as const;\n\n/** Direction */\nexport\ntype Direction = typeof DIRECTION[keyof typeof DIRECTION];\n\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  const arrA = Array.isArray(a), arrB = Array.isArray(b);\n  let i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date, dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    const regexpA = a instanceof RegExp, regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","import { type Direction, type Selection, DIRECTION } from './utils';\n\nexport\ntype ActionDetailsOptions = Pick<ActionDetails,\n  | 'value'\n  | 'cursorPos'\n  | 'oldValue'\n  | 'oldSelection'\n>;\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  declare value: string;\n  /** Current cursor position */\n  declare cursorPos: number;\n  /** Old input value */\n  declare oldValue: string;\n  /** Old selection */\n  declare oldSelection: Selection;\n\n  constructor (opts: ActionDetailsOptions) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n\n    // double check right part\n    while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n      if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;\n      else ++this.cursorPos;\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","import type { default as _InputMask, InputMaskElement as _InputMaskElement } from '../controls/input';\nimport type { default as _Masked } from '../masked/base';\nimport type { default as _MaskedPattern } from '../masked/pattern';\nimport type { default as _MaskedDate } from '../masked/date';\nimport type { default as _MaskedDynamic } from '../masked/dynamic';\nimport type { default as _MaskedEnum } from '../masked/enum';\nimport type { default as _MaskedRange } from '../masked/range';\nimport type { default as _MaskedNumber } from '../masked/number';\nimport type { default as _MaskedFunction } from '../masked/function';\nimport type { default as _MaskedRegExp } from '../masked/regexp';\nimport type {\n  default as _createMask,\n  FactoryArg,\n} from '../masked/factory';\nimport type { default as _ChangeDetails } from './change-details';\n\nimport type { default as _MaskElement } from '../controls/mask-element';\nimport type { default as _HTMLMaskElement } from '../controls/html-mask-element';\nimport type { default as _HTMLContenteditableMaskElement } from '../controls/html-contenteditable-mask-element';\nimport type {\n  createPipe as _createPipe,\n  pipe as _pipe,\n  PIPE_TYPE as _PIPE_TYPE\n} from '../masked/pipe';\n\n\n/** Applies mask on element */\nfunction IMask<Opts extends FactoryArg> (el: _InputMaskElement, opts: Opts): _InputMask<Opts> {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace IMask {\n  export let InputMask: typeof _InputMask;\n  export let createMask: typeof _createMask;\n  export let Masked: typeof _Masked;\n  export let MaskedPattern: typeof _MaskedPattern;\n  export let MaskedDate: typeof _MaskedDate;\n  export let MaskedDynamic: typeof _MaskedDynamic;\n  export let MaskedEnum: typeof _MaskedEnum;\n  export let MaskedRange: typeof _MaskedRange;\n  export let MaskedNumber: typeof _MaskedNumber;\n  export let MaskedFunction: typeof _MaskedFunction;\n  export let MaskedRegExp: typeof _MaskedRegExp;\n  export let ChangeDetails: typeof _ChangeDetails;\n  export let MaskElement: typeof _MaskElement;\n  export let HTMLMaskElement: typeof _HTMLMaskElement;\n  export let HTMLContenteditableMaskElement: typeof _HTMLContenteditableMaskElement;\n  export let createPipe: typeof _createPipe;\n  export let pipe: typeof _pipe;\n  export let PIPE_TYPE: typeof _PIPE_TYPE;\n}\n\nexport default IMask;\n","import { isString, pick, isObject } from '../core/utils';\nimport type Masked from './base';\nimport { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\nimport type MaskedRegExp from './regexp';\nimport type MaskedPattern from './pattern';\nimport type MaskedFunction from './function';\nimport type MaskedDate from './date';\nimport type MaskedNumber from './number';\nimport type MaskedDynamic from './dynamic';\nimport type MaskedRange from './range';\nimport type MaskedEnum from './enum';\n\nimport { type MaskedEnumOptions } from './enum';\nimport { type MaskedRangeOptions } from './range';\nimport { type MaskedDynamicOptions } from './dynamic';\nimport { type MaskedPatternOptions } from './pattern';\nimport { type MaskedNumberOptions } from './number';\nimport { type MaskedRegExpOptions } from './regexp';\nimport { type MaskedFunctionOptions } from './function';\nimport { type MaskedDateOptions } from './date';\n\ntype MaskedDateFactoryOptions = Omit<MaskedDateOptions, 'mask'> & { mask: DateConstructor };\n\nexport\ntype FactoryStaticOpts =\n  | MaskedDateFactoryOptions\n  | MaskedNumberOptions\n  | MaskedPatternOptions\n  | MaskedDynamicOptions\n  | MaskedRegExpOptions\n  | MaskedFunctionOptions\n;\n\nexport\ntype AllFactoryStaticOpts =\n  & MaskedDateFactoryOptions\n  & MaskedNumberOptions\n  & MaskedPatternOptions\n  & MaskedDynamicOptions\n  & MaskedRegExpOptions\n  & MaskedFunctionOptions\n  & MaskedEnumOptions\n  & MaskedRangeOptions\n;\n\nexport\ntype FactoryStaticReturnMasked<Opts extends FactoryStaticOpts> =\n  Opts extends MaskedDateFactoryOptions ? MaskedDate :\n  Opts extends MaskedNumberOptions ? MaskedNumber :\n  Opts extends MaskedPatternOptions ? MaskedPattern :\n  Opts extends MaskedDynamicOptions ? MaskedDynamic :\n  Opts extends MaskedRegExpOptions ? MaskedRegExp :\n  Opts extends MaskedFunctionOptions ? MaskedFunction :\n  never\n;\n\nexport\ntype FactoryStaticMaskReturnMasked<Mask extends FactoryStaticOpts['mask']> =\n  Mask extends MaskedDateFactoryOptions['mask'] ? MaskedDate :\n  Mask extends MaskedNumberOptions['mask'] ? MaskedNumber :\n  Mask extends MaskedPatternOptions['mask'] ? MaskedPattern :\n  Mask extends MaskedDynamicOptions['mask'] ? MaskedDynamic :\n  Mask extends MaskedRegExpOptions['mask'] ? MaskedRegExp :\n  Mask extends MaskedFunctionOptions['mask'] ? MaskedFunction :\n  never\n;\n\n\nexport\ntype FactoryInstanceOpts =\n  | { mask: MaskedDate } & Omit<MaskedDateFactoryOptions, 'mask'>\n  | { mask: MaskedNumber } & Omit<MaskedNumberOptions, 'mask'>\n  | { mask: MaskedEnum } & Omit<MaskedEnumOptions, 'mask'>\n  | { mask: MaskedRange } & Omit<MaskedRangeOptions, 'mask'>\n  | { mask: MaskedRegExp } & Omit<MaskedRegExpOptions, 'mask'>\n  | { mask: MaskedFunction } & Omit<MaskedFunctionOptions, 'mask'>\n  | { mask: MaskedPattern } & Omit<MaskedPatternOptions, 'mask'>\n  | { mask: MaskedDynamic } & Omit<MaskedDynamicOptions, 'mask'>\n  | { mask: Masked } & Omit<MaskedOptions, 'mask'>\n;\n\nexport\ntype FactoryInstanceReturnMasked<Opts extends FactoryInstanceOpts> = Opts extends { mask: infer M } ? M : never;\n\nexport\ntype FactoryConstructorOpts =\n  | { mask: typeof MaskedDate } & Omit<MaskedDateFactoryOptions, 'mask'>\n  | { mask: typeof MaskedNumber } & Omit<MaskedNumberOptions, 'mask'>\n  | { mask: typeof MaskedEnum } & Omit<MaskedEnumOptions, 'mask'>\n  | { mask: typeof MaskedRange } & Omit<MaskedRangeOptions, 'mask'>\n  | { mask: typeof MaskedRegExp } & Omit<MaskedRegExpOptions, 'mask'>\n  | { mask: typeof MaskedFunction } & Omit<MaskedFunctionOptions, 'mask'>\n  | { mask: typeof MaskedPattern } & Omit<MaskedPatternOptions, 'mask'>\n  | { mask: typeof MaskedDynamic } & Omit<MaskedDynamicOptions, 'mask'>\n  | { mask: typeof Masked } & Omit<MaskedOptions, 'mask'>\n;\n \nexport\ntype FactoryConstructorReturnMasked<Opts extends FactoryConstructorOpts> =\n  Opts extends { mask: typeof MaskedDate } ? MaskedDate :\n  Opts extends { mask: typeof MaskedNumber } ? MaskedNumber :\n  Opts extends { mask: typeof MaskedEnum } ? MaskedEnum :\n  Opts extends { mask: typeof MaskedRange } ? MaskedRange :\n  Opts extends { mask: typeof MaskedRegExp } ? MaskedRegExp :\n  Opts extends { mask: typeof MaskedFunction } ? MaskedFunction :\n  Opts extends { mask: typeof MaskedPattern } ? MaskedPattern :\n  Opts extends { mask: typeof MaskedDynamic } ? MaskedDynamic :\n  Masked\n;\n\nexport\ntype FactoryOpts = FactoryConstructorOpts | FactoryInstanceOpts | FactoryStaticOpts;\n\nexport\ntype FactoryArg = Masked | FactoryOpts | FactoryStaticOpts['mask'];\n\nexport\ntype ExtendFactoryArgOptions<Opts extends { [key: string]: any }> =\n  Masked | FactoryOpts & Opts | FactoryStaticOpts['mask']\n;\n\nexport\ntype UpdateStaticOpts<Opts extends FactoryStaticOpts> =\n  Opts extends MaskedEnumOptions ? MaskedEnumOptions :\n  Opts extends MaskedRangeOptions ? MaskedRangeOptions :\n  Opts extends MaskedDynamicOptions ? MaskedDynamicOptions :\n  Opts extends MaskedPatternOptions ? MaskedPatternOptions :\n  Opts extends MaskedDateOptions ? MaskedDateOptions :\n  Opts extends MaskedNumberOptions ? MaskedNumberOptions :\n  Opts extends MaskedRegExpOptions ? MaskedRegExpOptions :\n  Opts extends MaskedFunctionOptions ? MaskedFunctionOptions :\n  never\n;\n\ntype AnyOpts = Record<string, any>;\n\nexport\ntype UpdateInstanceOpts<M extends Masked> =\n  M extends MaskedRegExp ? MaskedRegExpOptions :\n  M extends MaskedFunction ? MaskedFunctionOptions :\n  M extends MaskedDate ? MaskedDateOptions :\n  M extends MaskedNumber ? MaskedNumberOptions :\n  M extends MaskedDynamic ? MaskedDynamicOptions :\n  M extends MaskedRange ? MaskedRangeOptions & { mask: MaskedRange } :\n  M extends MaskedEnum ? MaskedEnumOptions & { mask: MaskedEnum } :\n  M extends MaskedPattern ? MaskedPatternOptions :\n  AnyOpts\n;\n\nexport\ntype UpdateConstructorOpts<M extends FactoryConstructorOpts> =\n  M extends { mask: typeof MaskedDate } ? MaskedDateOptions :\n  M extends { mask: typeof MaskedNumber } ? MaskedNumberOptions :\n  M extends { mask: typeof MaskedEnum } ? MaskedEnumOptions & { mask: typeof MaskedEnum } :\n  M extends { mask: typeof MaskedRange } ? MaskedRangeOptions & { mask: typeof MaskedRange } :\n  M extends { mask: typeof MaskedRegExp } ? MaskedRegExpOptions :\n  M extends { mask: typeof MaskedFunction } ? MaskedFunctionOptions :\n  M extends { mask: typeof MaskedPattern } ? MaskedPatternOptions :\n  M extends { mask: typeof MaskedDynamic } ? MaskedDynamicOptions :\n  AnyOpts\n;\n\nexport\ntype UpdateStaticMaskOpts<M extends FactoryStaticOpts['mask']> =\n  M extends MaskedDateFactoryOptions['mask'] ? MaskedDateOptions :\n  M extends MaskedNumberOptions['mask'] ? MaskedNumberOptions :\n  M extends MaskedPatternOptions['mask'] ? MaskedPatternOptions :\n  M extends MaskedDynamicOptions['mask'] ? MaskedDynamicOptions :\n  M extends MaskedRegExpOptions['mask'] ? MaskedRegExpOptions :\n  M extends MaskedFunctionOptions['mask'] ? MaskedFunctionOptions :\n  never\n;\n\nexport\ntype UpdateOpts<Opts extends FactoryArg> = Partial<\n  Opts extends Masked ? UpdateInstanceOpts<Opts> :\n  Opts extends FactoryStaticOpts['mask'] ? UpdateStaticMaskOpts<Opts> :\n  Opts extends FactoryStaticOpts ? UpdateStaticOpts<Opts> :\n  Opts extends FactoryInstanceOpts ? UpdateInstanceOpts<Opts['mask']> :\n  Opts extends FactoryConstructorOpts ? UpdateConstructorOpts<Opts> :\n  AnyOpts\n>;\n\nexport\ntype FactoryReturnMasked<Opts extends FactoryArg> =\n  Opts extends Masked ? Opts :\n  Opts extends FactoryStaticOpts['mask'] ? FactoryStaticMaskReturnMasked<Opts> :\n  Opts extends FactoryConstructorOpts ? FactoryConstructorReturnMasked<Opts> :\n  Opts extends FactoryInstanceOpts ? FactoryInstanceReturnMasked<Opts> :\n  Opts extends FactoryStaticOpts ? FactoryStaticReturnMasked<Opts> :\n  never\n;\n\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nexport function maskedClass (mask: Masked | FactoryOpts['mask']): any /* TODO */ {\n  if (mask == null) throw new Error('mask property should be defined');\n\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && (mask as any).prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  return IMask.Masked;\n}\n\ntype MaskedClassOf<M extends Masked> =\n  M extends MaskedDate ? typeof MaskedDate :\n  M extends MaskedNumber ? typeof MaskedNumber :\n  M extends MaskedEnum ? typeof MaskedEnum :\n  M extends MaskedRange ? typeof MaskedRange :\n  M extends MaskedRegExp ? typeof MaskedRegExp :\n  M extends MaskedFunction ? typeof MaskedFunction :\n  M extends MaskedPattern ? typeof MaskedPattern :\n  M extends MaskedDynamic ? typeof MaskedDynamic :\n  any\n;\n\n\ntype NormalizedMaskedOpts<Opts extends Masked> = Omit<Opts, 'mask'> & {\n  _mask: Opts,\n  mask: MaskedClassOf<Opts>,\n};\n\ntype NormalizedInstanceOpts<Opts extends FactoryInstanceOpts> =\n  Omit<Opts['mask'], `_${string}` | 'mask'> &\n  NormalizedMaskedOpts<Opts['mask']>\n;\n\nexport\ntype NormalizedOpts<Opts extends FactoryArg> =\n  Opts extends FactoryStaticOpts['mask'] ? { mask: Opts } :\n  Opts extends Masked ? NormalizedMaskedOpts<Opts> :\n  Opts extends FactoryInstanceOpts ? NormalizedInstanceOpts<Opts> :\n  Opts extends FactoryStaticOpts | FactoryConstructorOpts ? Opts :\n  { mask: Opts }\n;\n\nexport\nfunction normalizeOpts<Opts extends FactoryArg> (opts: Opts): NormalizedOpts<Opts> {\n  if (!opts) throw new Error('Options in not defined');\n\n  if (IMask.Masked) {\n    if ((opts as any).prototype instanceof IMask.Masked) return { mask: opts } as NormalizedOpts<Opts>;\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const { mask=undefined, ...instanceOpts } =\n      opts instanceof IMask.Masked ? { mask: opts } :\n      isObject(opts) && (opts as FactoryInstanceOpts).mask instanceof IMask.Masked ? (opts as FactoryInstanceOpts) : {};\n\n    if (mask) {\n      const _mask = (mask as Masked).mask;\n\n      return {\n        ...pick(mask, (_, k: string) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts,\n      } as NormalizedOpts<Opts>;\n    }\n  }\n\n  if (!isObject(opts)) return { mask: opts } as unknown as NormalizedOpts<Opts>;\n\n  return { ...opts } as unknown as NormalizedOpts<Opts>;\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask<Opts extends FactoryArg> (opts: Opts): FactoryReturnMasked<Opts> {\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts as FactoryReturnMasked<Opts>;\n  const nOpts = normalizeOpts(opts);\n\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(`Masked class is not found for provided mask ${nOpts.mask}, appropriate module needs to be imported manually before creating mask.`);\n\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if ((nOpts as any)._mask) { nOpts.mask = (nOpts as any)._mask; delete (nOpts as any)._mask; }\n  return new MaskedClass(nOpts);\n}\n\n\nIMask.createMask = createMask;\n","import IMask from '../core/holder';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**  Generic element API to use with mask */\nexport default\nabstract class MaskElement {\n  /** */\n  abstract _unsafeSelectionStart: number | null;\n  /** */\n  abstract _unsafeSelectionEnd: number | null;\n  /** */\n  abstract value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive (): boolean { return false; }\n  /** */\n  abstract _unsafeSelect (start: number, end: number): void;\n  /** */\n  abstract bindEvents (handlers: {[key in ElementEvent]: Function}): void;\n  /** */\n  abstract unbindEvents (): void\n}\n\n\nIMask.MaskElement = MaskElement;\n","import MaskElement, { type ElementEvent } from './mask-element';\nimport IMask from '../core/holder';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nabstract class HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP = {\n    selectionChange: 'keydown',\n    input: 'input',\n    drop: 'drop',\n    click: 'click',\n    focus: 'focus',\n    commit: 'blur',\n  } as const;\n  /** HTMLElement to use mask on */\n  declare input: HTMLElement;\n  declare _handlers: {[k: string]: EventListener};\n  abstract value: string;\n\n  constructor (input: HTMLElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  get rootElement (): HTMLDocument {\n    return (this.input.getRootNode?.() ?? document) as HTMLDocument;\n  }\n\n  /**\n    Is element in focus\n  */\n  get isActive (): boolean {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n  */\n  override bindEvents (handlers: {[key in ElementEvent]: EventListener}) {\n    (Object.keys(handlers) as Array<ElementEvent>)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n  */\n  override unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  _toggleEventHandler (event: string, handler?: EventListener): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","import HTMLMaskElement from './html-mask-element';\nimport IMask from '../core/holder';\n\nexport\ntype InputElement = HTMLTextAreaElement | HTMLInputElement;\n\n/** Bridge between InputElement and {@link Masked} */\nexport default\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n  declare input: InputElement;\n\n  constructor (input: InputElement) {\n    super(input);\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** Returns InputElement selection start */\n  override get _unsafeSelectionStart (): number | null {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  override get _unsafeSelectionEnd (): number | null {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  override get value (): string {\n    return this.input.value;\n  }\n  override set value (value: string) {\n    this.input.value = value;\n  }\n}\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","import HTMLMaskElement from './html-mask-element';\nimport IMask from '../core/holder';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  declare input: HTMLElement;\n  /** Returns HTMLElement selection start */\n  override get _unsafeSelectionStart (): number | null {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  override get _unsafeSelectionEnd (): number | null {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  override _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  override get value (): string {\n    return this.input.textContent || '';\n  }\n  override set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","import { DIRECTION, type Selection } from '../core/utils';\nimport ActionDetails from '../core/action-details';\nimport createMask, { type UpdateOpts, maskedClass, type FactoryArg, type FactoryReturnMasked } from '../masked/factory';\nimport Masked from '../masked/base';\nimport MaskElement from './mask-element';\nimport HTMLInputMaskElement, { type InputElement } from './html-input-mask-element';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element';\nimport IMask from '../core/holder';\n\n\nexport\ntype InputMaskElement = MaskElement | InputElement | HTMLElement;\n\nexport\ntype InputMaskEventListener = (e?: InputEvent) => void;\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask<Opts extends FactoryArg=Record<string, unknown>> {\n  /**\n    View element\n  */\n  declare el: MaskElement;\n\n  /** Internal {@link Masked} model */\n  declare masked: FactoryReturnMasked<Opts>;\n\n  declare _listeners: Record<string, Array<InputMaskEventListener>>;\n  declare _value: string;\n  declare _changingCursorPos: number;\n  declare _unmaskedValue: string;\n  declare _selection: Selection;\n  declare _cursorChanging?: ReturnType<typeof setTimeout>;\n  declare _inputEvent?: InputEvent;\n\n  constructor (el: InputMaskElement, opts: Opts) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLInputMaskElement(el as InputElement);\n\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  maskEquals (mask: any): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  /** Masked */\n  get mask (): FactoryReturnMasked<Opts>['mask'] {\n    return this.masked.mask;\n  }\n  set mask (mask: any) {\n    if (this.maskEquals(mask)) return;\n\n    if (!((mask as Masked) instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask as Masked)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({ mask } as any);\n      return;\n    }\n\n    const masked = (mask instanceof IMask.Masked ? mask : createMask({ mask } as Opts)) as FactoryReturnMasked<Opts>;\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): FactoryReturnMasked<Opts>['typedValue'] {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: FactoryReturnMasked<Opts>['typedValue']) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue (): string {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent (ev: string, e?: InputEvent) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection (/* ev */) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos,\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts: UpdateOpts<Opts>) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);  // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: InputMaskEventListener): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: InputMaskEventListener): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection,\n    });\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    (this._listeners as any).length = 0;\n    delete (this as any).el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","import IMask from \"./holder\";\n\n\nexport\ntype ChangeDetailsOptions = Pick<ChangeDetails,\n  | 'inserted'\n  | 'skip'\n  | 'tailShift'\n  | 'rawInserted'\n>;\n\n/** Provides details of changing model value */\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  declare inserted: string;\n  /** Can skip chars */\n  declare skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  declare tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  declare rawInserted: string;\n\n  static normalize (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n    return Array.isArray(prep) ? prep : [\n      prep,\n      new ChangeDetails(),\n    ];\n  }\n\n  constructor (details?: Partial<ChangeDetailsOptions>) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate (details: ChangeDetails): this {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n\n\nIMask.ChangeDetails = ChangeDetails;\n","import type { TailDetails, AppendTail } from './tail-details';\nimport type ChangeDetails from './change-details';\n\n\ntype ContinuousTailState = Pick<ContinuousTailDetails,\n  | 'value'\n  | 'from'\n  | 'stop'\n>;\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  declare value: string;\n  /** Tail start position */\n  declare from: number;\n  /** Start position */\n  declare stop?: number;\n\n  constructor (value: string='', from: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","import ChangeDetails from '../core/change-details';\nimport ContinuousTailDetails from '../core/continuous-tail-details';\nimport { type Direction, DIRECTION, isString, forceDirection, objectIncludes } from '../core/utils';\nimport { type TailDetails } from '../core/tail-details';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedState = {\n  _value: string,\n  _rawInputValue: string,\n};\n\n/** Append flags */\nexport\ntype AppendFlags<State=MaskedState> = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: State,\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\nexport\ntype MaskedOptions<M extends Masked=Masked, Props extends keyof M=never> = Partial<Pick<M,\n  | 'mask'\n  | 'parent'\n  | 'prepare'\n  | 'prepareChar'\n  | 'validate'\n  | 'commit'\n  | 'format'\n  | 'parse'\n  | 'overwrite'\n  | 'eager'\n  | 'skipInvalid'\n  | Props\n>>;\n\n\n/** Provides common masking stuff */\nexport default\nabstract class Masked<Value=any> {\n  static DEFAULTS: Record<string, any> = {\n    skipInvalid: true,\n  } satisfies Partial<MaskedOptions>;\n  static EMPTY_VALUES: Array<any> = [undefined, null, ''];\n\n  /** */\n  declare mask: unknown;\n  /** */\n  declare parent?: Masked;\n  /** Transforms value before mask processing */\n  declare prepare?: (chars: string, masked: Masked, flags: AppendFlags) => string | [string, ChangeDetails];\n  /** Transforms each char before mask processing */\n  declare prepareChar?: (chars: string, masked: Masked, flags: AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  declare validate?: (value: string, masked: Masked, flags: AppendFlags) => boolean;\n  /** Does additional processing at the end of editing */\n  declare commit?: (value: string, masked: Masked) => void;\n  /** Format typed value to string */\n  declare format?: (value: Value, masked: Masked) => string;\n  /** Parse string to get typed value */\n  declare parse?: (str: string, masked: Masked) => Value;\n  /** Enable characters overwriting */\n  abstract overwrite?: boolean | 'shift' | undefined;\n  /** */\n  abstract eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  abstract skipInvalid?: boolean | undefined;\n\n  /** */\n  declare _initialized: boolean;\n\n  declare _value: string;\n  declare _refreshing?: boolean;\n  declare _isolated?: boolean;\n\n  constructor (opts: MaskedOptions) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: Partial<MaskedOptions>) {\n    if (!this.optionsIsChanged(opts)) return;\n\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update (opts: Partial<MaskedOptions>) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): MaskedState {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n    };\n  }\n\n  set state (state: MaskedState) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value, { input: true });\n  }\n\n  /** Resolve new value */\n  resolve (value: string, flags: AppendFlags={ input: true }): void {\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.resolve(value, {});\n  }\n\n  get typedValue (): Value {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue as Value;\n  }\n\n  set typedValue (value: Value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.displayValue.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.resolve(value, { raw: true });\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.displayValue.length): number {\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos: number=0, toPos: number=this.displayValue.length, flags?: ExtractFlags): string {\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos: number=0, toPos: number=this.displayValue.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return (tail as TailDetails).appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = this.doPrepareChar(ch, flags);\n\n    if (ch) details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i=0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i=0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail as TailDetails;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    return details;\n  }\n\n  remove (fromPos: number=0, toPos: number=this.displayValue.length): ChangeDetails {\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  runIsolated<T>(fn: (masked: this) => T): T {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare (str: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    return ChangeDetails.normalize(this.prepare ?\n      this.prepare(str, this, flags) :\n      str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar (str: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    return ChangeDetails.normalize(this.prepareChar ?\n      this.prepareChar(str, this, flags) :\n      str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction = DIRECTION.NONE, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  optionsIsChanged (opts: Partial<MaskedOptions>): boolean {\n    return !objectIncludes(this, opts);\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n}\n\n\nIMask.Masked = Masked;\n","import type { TailDetails, AppendTail } from '../../core/tail-details';\nimport ChangeDetails from '../../core/change-details';\nimport { isString } from '../../core/utils';\nimport ContinuousTailDetails from '../../core/continuous-tail-details';\nimport IMask from '../../core/holder';\nimport type MaskedPattern from '../pattern';\n\n\nexport\ntype ChunksTailState = Pick<ChunksTailDetails,\n  | 'from'\n  | 'stop'\n  | 'blockIndex'\n> & { chunks: Array<TailDetails['state']> };\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  declare chunks: Array<TailDetails>;\n  declare from: number;\n  declare stop?: number;\n  /** */\n  declare blockIndex?: number;\n\n  constructor (chunks: Array<TailDetails>=[], from: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    tailChunk = (isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk) as TailDetails;\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift() as TailDetails;  // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail | MaskedPattern): ChangeDetails {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          const phDetails = masked._appendPlaceholder(stop);\n          details.aggregate(phDetails);\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    }\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","import { DIRECTION } from '../../core/utils';\nimport type MaskedPattern from '../pattern';\nimport type PatternBlock from './block';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor<Value> {\n  declare masked: MaskedPattern<Value>;\n  declare offset: number;\n  declare index: number;\n  declare ok: boolean;\n  declare _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern<Value>, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState | undefined {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = (this.block as unknown as PatternBlock).displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n\n  _pushLeft(fn: () => boolean | undefined): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.displayValue.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => boolean | undefined): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","import ChangeDetails from '../../core/change-details';\nimport { DIRECTION, type Direction, isString } from '../../core/utils';\nimport { type TailDetails } from '../../core/tail-details';\nimport ContinuousTailDetails from '../../core/continuous-tail-details';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base';\nimport type PatternBlock from './block';\n\n\nexport\ntype PatternFixedDefinitionOptions = Pick<PatternFixedDefinition, 'char' | 'isUnmasking' | 'eager'>;\n\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  declare _value: string;\n  /** */\n  declare char: string;\n  /** */\n  declare isUnmasking?: boolean;\n  /** */\n  declare eager: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare _isRawInput?: boolean;\n  /** */\n  declare isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  get rawInputValue (): string {\n    return this._isRawInput ? this.value : '';\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos: number=0, toPos: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this._value.length): number {\n    return this._isRawInput ? (toPos - fromPos) : 0;\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this._value.length, flags: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return (tail as TailDetails).appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): MaskedState {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue,\n    };\n  }\n\n  set state (state: MaskedState) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n}\n","import createMask, { type FactoryArg, type FactoryOpts, type FactoryReturnMasked } from '../factory';\nimport type Masked from '../base';\nimport type MaskedPattern from '../pattern';\nimport { type TailDetails } from '../../core/tail-details';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base';\nimport ChangeDetails from '../../core/change-details';\nimport { DIRECTION, type Direction } from '../../core/utils';\nimport type PatternBlock from './block';\n\n\nexport\ntype PatternInputDefinitionOptions<Opts extends FactoryOpts> =\n  Omit<Opts,\n  | 'parent'\n  | 'isOptional'\n  | 'lazy'\n  | 'eager'\n  | 'placeholderChar'\n  | 'displayChar'> &\n  Partial<Pick<PatternInputDefinition,\n  | 'parent'\n  | 'isOptional'\n  | 'lazy'\n  | 'eager'\n  | 'placeholderChar'\n  | 'displayChar'\n>>;\n\nexport\ntype PatternInputDefinitionState<Opts extends FactoryArg> = MaskedState & {\n  masked: FactoryReturnMasked<Opts>['state'],\n  isFilled: boolean,\n};\n\n\nexport default\nclass PatternInputDefinition<Opts extends FactoryOpts=any> implements PatternBlock<PatternInputDefinitionState<Opts>> {\n  static DEFAULT_DEFINITIONS: { [k: string]: RegExp } = {\n    '0': /\\d/,\n    'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n    '*': /./\n  }\n\n  /** */\n  declare readonly masked: FactoryReturnMasked<Opts>;\n  /** */\n  declare parent: Masked;\n  /** */\n  declare isOptional: boolean;\n  /** */\n  declare isFilled: boolean;\n  /** */\n  declare lazy: MaskedPattern['lazy'];\n  /** */\n  declare eager: MaskedPattern['eager'];\n  /** */\n  declare placeholderChar: MaskedPattern['placeholderChar'];\n  /** */\n  declare displayChar: MaskedPattern['displayChar'];\n\n  constructor(opts: PatternInputDefinitionOptions<Opts>) {\n    const { parent, isOptional, placeholderChar, displayChar, lazy, eager, ...maskOpts } = opts;\n\n    this.masked = createMask(maskOpts as Opts);\n    Object.assign(this, { parent, isOptional, placeholderChar, displayChar, lazy, eager });\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get rawInputValue (): string {\n    return this.masked.rawInputValue;\n  }\n\n  get displayValue (): string {\n    return this.masked.value && this.displayChar || this.value;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags<PatternInputDefinitionState<Opts>>={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (str: string, flags?: AppendFlags<PatternInputDefinitionState<Opts>>, tail?: TailDetails): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (fromPos?: number, toPos?: number): TailDetails {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n\n  appendTail (tail: string | TailDetails): ChangeDetails {\n    return this.masked.appendTail(tail);\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.value.length): number {\n    return this.value.slice(fromPos, toPos).length;\n  }\n\n  doValidate (flags: AppendFlags<PatternInputDefinitionState<Opts>>): boolean {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (\n      !this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState<Opts> {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState<Opts>) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n\n  currentMaskFlags (flags?: AppendFlags<PatternInputDefinitionState<Opts>>): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags?._beforeTailState?.masked || flags?._beforeTailState as unknown as MaskedState,\n    };\n  }\n}\n","import Masked, { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedRegExpOptions = MaskedOptions<MaskedRegExp>;\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<string> {\n  /** */\n  declare mask: RegExp;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  override updateOptions (opts: Partial<MaskedRegExpOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedRegExpOptions>) {\n    const mask = opts.mask;\n    if (mask) opts.validate = (value) => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","import ChangeDetails from '../core/change-details';\nimport IMask from '../core/holder';\nimport { type TailDetails } from '../core/tail-details';\nimport { DIRECTION, type Direction } from '../core/utils';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base';\nimport createMask, { type FactoryArg, normalizeOpts, type ExtendFactoryArgOptions, NormalizedOpts } from './factory';\nimport type PatternBlock from './pattern/block';\nimport ChunksTailDetails from './pattern/chunk-tail-details';\nimport PatternCursor from './pattern/cursor';\nimport PatternFixedDefinition from './pattern/fixed-definition';\nimport PatternInputDefinition from './pattern/input-definition';\nimport './regexp'; // support for default definitions which are regexp's\n\n\nexport\ntype MaskedPatternOptions<\n  Value=string,\n  M extends MaskedPattern<Value>=MaskedPattern<Value>,\n  Props extends keyof M=never,\n> = MaskedOptions<M,\n  | 'definitions'\n  | 'blocks'\n  | 'placeholderChar'\n  | 'displayChar'\n  | 'lazy'\n  | Props\n>;\n\nexport\ntype Definitions = {\n  [k: string]: FactoryArg,\n};\n\nexport\ntype MaskedPatternState = MaskedState & {\n  _blocks: Array<MaskedState>,\n};\n\nexport\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n\n/** Pattern mask */\nexport default\nclass MaskedPattern<Value=string> extends Masked<Value> {\n  static DEFAULTS: Record<string, any> = {\n    lazy: true,\n    placeholderChar: '_'\n  } satisfies Partial<MaskedPattern>;\n  static STOP_CHAR = '`';\n  static ESCAPE_CHAR = '\\\\';\n  static InputDefinition = PatternInputDefinition;\n  static FixedDefinition = PatternFixedDefinition;\n\n  declare mask: string;\n  /** */\n  declare blocks: { [key: string]: ExtendFactoryArgOptions<{ expose?: boolean }> };\n  /** */\n  declare definitions: Definitions;\n  /** Single char for empty input */\n  declare placeholderChar: string;\n  /** Single char for filled input */\n  declare displayChar: string;\n  /** Show placeholder only when needed */\n  declare lazy: boolean;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  declare _blocks: Array<PatternBlock>;\n  declare _maskedBlocks: {[key: string]: Array<number>};\n  declare _stops: Array<number>;\n  declare exposeBlock?: Masked;\n\n  constructor (opts: MaskedPatternOptions<Value>) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts?.definitions),\n    } as MaskedOptions);\n  }\n\n  override updateOptions (opts: Partial<MaskedPatternOptions<Value>>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedPatternOptions<Value>>) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = []; this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const { expose, ...blockOpts } = normalizeOpts(this.blocks[bName]) as NormalizedOpts<FactoryArg> & { expose?: boolean };\n          const maskedBlock = createMask({\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...blockOpts,\n            parent: this,\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          isOptional: optionalBlock,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          displayChar: this.displayChar,\n          ...normalizeOpts(defs[char]),\n          parent: this,\n        }) as PatternBlock :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  get isComplete (): boolean {\n    return this.exposeBlock ? this.exposeBlock.isComplete :\n      this._blocks.every(b => b.isComplete);\n  }\n\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  get unmaskedValue (): string {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue :\n      this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    }\n    else super.unmaskedValue = unmaskedValue;\n  }\n\n  get value (): string {\n    return this.exposeBlock ? this.exposeBlock.value :\n      // TODO return _value when not in change?\n      this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    }\n    else super.value = value;\n  }\n\n  get typedValue (): Value {\n    return this.exposeBlock ? this.exposeBlock.typedValue :\n      super.typedValue;\n  }\n\n  set typedValue (value: Value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    }\n    else super.typedValue = value;\n  }\n\n  get displayValue (): string {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.displayValue.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  _appendCharRaw (ch: string, flags: AppendFlags<MaskedPatternState>={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index, block; (block = this._blocks[bi]); ++bi) {\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  extractTail (fromPos: number=0, toPos: number=this.displayValue.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  extractInput (fromPos: number=0, toPos: number=this.displayValue.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): number | undefined {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex?: number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          const bDetails = b._appendPlaceholder((b as MaskedPattern)._blocks?.length);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): BlockPosData | undefined {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.displayValue;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.displayValue.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  remove (fromPos: number=0, toPos: number=this.displayValue.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  totalInputPositions (fromPos: number=0, toPos: number=this.displayValue.length): number {\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): PatternBlock | undefined {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\n\n\nIMask.MaskedPattern = MaskedPattern;\n","import ChangeDetails from '../core/change-details';\nimport IMask from '../core/holder';\nimport { type AppendFlags } from './base';\nimport MaskedPattern, { type MaskedPatternOptions } from './pattern';\n\n\ntype MaskedRangePatternOptions = MaskedPatternOptions &\n  Pick<MaskedRange, 'from' | 'to' | 'autofix'> &\n  Partial<Pick<MaskedRange, 'maxLength'>>;\n\nexport\ntype MaskedRangeOptions = Omit<MaskedRangePatternOptions, 'mask'>;\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  declare maxLength: number;\n  /** Min bound */\n  declare from: number;\n  /** Max bound */\n  declare to: number;\n  /** */\n  declare autofix?: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  constructor (opts?: MaskedRangeOptions) {\n    super(opts as MaskedPatternOptions); // mask will be created in _update\n  }\n\n  override updateOptions (opts: Partial<MaskedRangeOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedRangeOptions>) {\n    const {\n      to=this.to || 0,\n      from=this.from || 0,\n      maxLength=this.maxLength || 0,\n      autofix=this.autofix,\n      ...patternOpts\n    }: Partial<MaskedRangePatternOptions> = opts;\n\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n\n    super._update(patternOpts);\n  }\n\n  override get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  override doPrepareChar (ch: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n\n    if (!this.autofix || !ch) return [ch, details];\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    const nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return ['', details];\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return [fromStr[nextVal.length - 1], details];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return [toStr[nextVal.length - 1], details];\n    }\n\n    return [ch, details];\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(flags);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","import MaskedPattern, { type MaskedPatternOptions } from './pattern';\nimport { type MaskedRangeOptions } from './range';\nimport MaskedRange from './range';\nimport IMask from '../core/holder';\nimport type Masked from './base';\nimport { type AppendFlags } from './base';\nimport { isString } from '../core/utils';\n\n\nexport\ntype DateMaskType = DateConstructor;\n\ntype DateOptionsKeys =\n  | 'pattern'\n  | 'min'\n  | 'max'\n  | 'autofix'\n;\n\nexport\ntype DateValue = Date | null;\n\nexport\ntype MaskedDateOptions =\n  Omit<MaskedPatternOptions<DateValue>, 'mask'> &\n  Partial<Pick<MaskedDate, DateOptionsKeys>> &\n  { mask?: string | DateMaskType }\n;\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern<DateValue> {\n  static GET_DEFAULT_BLOCKS: () => { [k: string]: MaskedRangeOptions } = () => ({\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2,\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2,\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999,\n    }\n  });\n  static DEFAULTS: Record<string, any> = {\n    mask: Date,\n    pattern: 'd{.}`m{.}`Y',\n    format: (date: DateValue, masked: Masked): string => {\n      if (!date) return '';\n\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n\n      return [day, month, year].join('.');\n    },\n    parse: (str: string, masked: Masked): DateValue => {\n      const [day, month, year] = str.split('.').map(Number);\n      return new Date(year, month - 1, day);\n    },\n  } satisfies Partial<MaskedDateOptions>;\n\n  static extractPatternOptions (opts: Partial<MaskedDateOptions>): Partial<Omit<MaskedDateOptions, 'mask' | 'pattern'> & { mask: MaskedPatternOptions['mask'] }> {\n    const { mask, pattern, ...patternOpts } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  declare pattern: string;\n  /** Start date */\n  declare min?: Date;\n  /** End date */\n  declare max?: Date;\n  /** */\n  declare autofix?: boolean | 'pad' | undefined;\n  /** Format typed value to string */\n  declare format: (value: DateValue, masked: Masked) => string;\n  /** Parse string to get typed value */\n  declare parse: (str: string, masked: Masked) => DateValue;\n\n  constructor (opts?: MaskedDateOptions) {\n    super(MaskedDate.extractPatternOptions({\n      ...(MaskedDate.DEFAULTS as MaskedDateOptions),\n      ...opts,\n    }));\n  }\n\n  override updateOptions (opts: Partial<MaskedDateOptions>) {\n    super.updateOptions(opts as Partial<MaskedPatternOptions<DateValue>>);\n  }\n\n  override _update (opts: Partial<MaskedDateOptions>) {\n    const { mask, pattern, blocks, ...patternOpts } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts,\n    };\n\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to\n    ) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(patternBlocks).forEach(bk => {\n      const b = patternBlocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks,\n    });\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    const date = this.date;\n\n    return super.doValidate(flags) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): DateValue {\n    return this.typedValue;\n  }\n  set date (date: DateValue) {\n    this.typedValue = date;\n  }\n\n  override get typedValue (): DateValue {\n    return this.isComplete ? super.typedValue : null;\n  }\n  override set typedValue (value: DateValue) {\n    super.typedValue = value;\n  }\n\n  override maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n\n  override optionsIsChanged (opts: Partial<MaskedDateOptions>): boolean {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\n\n\nIMask.MaskedDate = MaskedDate;\n","import { objectIncludes } from '../core/utils';\nimport ChangeDetails from '../core/change-details';\nimport createMask, { type FactoryArg, type ExtendFactoryArgOptions, type NormalizedOpts, normalizeOpts } from './factory';\nimport Masked, { type AppendFlags, type MaskedState, type MaskedOptions, type ExtractFlags } from './base';\nimport { DIRECTION, type Direction } from '../core/utils';\nimport { type TailDetails } from '../core/tail-details';\nimport IMask from '../core/holder';\n\n\ntype MaskedDynamicNoRefState = MaskedState & {\n  compiledMasks: Array<MaskedState>\n};\n\ntype MaskedDynamicRefState = MaskedDynamicNoRefState & {\n  currentMaskRef: Masked,\n  currentMask: MaskedState,\n};\n\nexport\ntype MaskedDynamicState = MaskedDynamicNoRefState | MaskedDynamicRefState;\n\nexport\ntype DynamicMaskType = Array<ExtendFactoryArgOptions<{ expose?: boolean }>> | ArrayConstructor;\n\nexport\ntype MaskedDynamicOptions = MaskedOptions<MaskedDynamic, 'dispatch'>;\n\ntype HandleState = MaskedDynamicState | MaskedState;\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nexport default\nclass MaskedDynamic<Value=any> extends Masked<Value> {\n  static DEFAULTS: Partial<MaskedDynamicOptions>;\n\n  declare mask: DynamicMaskType;\n  /** Currently chosen mask */\n  declare currentMask?: Masked;\n  /** Currently chosen mask */\n  declare exposeMask?: Masked;\n  /** Compliled {@link Masked} options */\n  declare compiledMasks: Array<Masked>;\n  /** Chooses {@link Masked} depending on input value */\n  declare dispatch: (appended: string, masked: MaskedDynamic, flags: AppendFlags<HandleState>, tail: string | String | TailDetails) => (Masked | undefined);\n\n  declare _overwrite?: this['overwrite'];\n  declare _eager?: this['eager'];\n  declare _skipInvalid?: this['skipInvalid'];\n\n  constructor (opts?: MaskedDynamicOptions) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = undefined;\n  }\n\n  override updateOptions (opts: Partial<MaskedDynamicOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedDynamicOptions>) {\n    super._update(opts);\n\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => {\n          const { expose, ...maskOpts } = normalizeOpts(m) as NormalizedOpts<FactoryArg> & { expose?: boolean };\n\n          const masked = createMask({\n            overwrite: this._overwrite,\n            eager: this._eager,\n            skipInvalid: this._skipInvalid,\n            ...maskOpts,\n          });\n\n          if (expose) this.exposeMask = masked;\n\n          return masked;\n        }) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  override _appendCharRaw (ch: string, flags: AppendFlags<HandleState>={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags<HandleState>={}, tail: string | String | TailDetails = ''): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  override _appendPlaceholder (): ChangeDetails {\n    const details = this._applyDispatch();\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n  override _appendEager (): ChangeDetails {\n    const details = this._applyDispatch();\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  override appendTail (tail: string | String | TailDetails): ChangeDetails {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n\n    return details.aggregate(this.currentMask ?\n      this.currentMask.appendTail(tail) :\n      super.appendTail(tail));\n  }\n\n  currentMaskFlags (flags: AppendFlags<HandleState>): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState:\n        (flags._beforeTailState as MaskedDynamicRefState)?.currentMaskRef === this.currentMask &&\n        (flags._beforeTailState as MaskedDynamicRefState)?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  doDispatch(appended: string, flags: AppendFlags<HandleState>={}, tail: string | String | TailDetails=''): Masked | undefined {\n    return this.dispatch(appended, this, flags, tail);\n  }\n\n  override doValidate (flags: AppendFlags<HandleState>): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  override doPrepare (str: string, flags: AppendFlags<HandleState>={}): [string, ChangeDetails] {\n    let [s, details] = super.doPrepare(str, flags);\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags)));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  override doPrepareChar (str: string, flags: AppendFlags<HandleState>={}): [string, ChangeDetails] {\n    let [s, details] = super.doPrepareChar(str, flags);\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags)));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  override reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  override get value (): string {\n    return this.exposeMask ? this.exposeMask.value :\n      this.currentMask ? this.currentMask.value :\n      '';\n  }\n\n  override set value (value: string) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    }\n    else super.value = value;\n  }\n\n  override get unmaskedValue (): string {\n    return this.exposeMask ? this.exposeMask.unmaskedValue :\n      this.currentMask ? this.currentMask.unmaskedValue :\n      '';\n  }\n\n  override set unmaskedValue (unmaskedValue: string) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    }\n    else super.unmaskedValue = unmaskedValue;\n  }\n\n  override get typedValue (): Value {\n    return this.exposeMask ? this.exposeMask.typedValue :\n      this.currentMask ? this.currentMask.typedValue :\n      '';\n  }\n\n  override set typedValue (typedValue: Value) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  override get displayValue (): string {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n\n  override get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  override get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  override remove (fromPos?: number, toPos?: number): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  override get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  override set state (state: HandleState) {\n    const { compiledMasks, currentMaskRef, currentMask, ...maskedState } = state as MaskedDynamicRefState;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  override extractInput (fromPos?: number, toPos?: number, flags?: ExtractFlags): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(fromPos, toPos, flags) :\n      '';\n  }\n\n  override extractTail (fromPos?: number, toPos?: number): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(fromPos, toPos) :\n      super.extractTail(fromPos, toPos);\n  }\n\n  override doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  override nearestInputPos(cursorPos: number, direction?: Direction): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(cursorPos, direction) :\n      super.nearestInputPos(cursorPos, direction);\n  }\n\n  override get overwrite (): boolean | 'shift' | undefined {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      this._overwrite;\n  }\n\n  override set overwrite (overwrite: boolean | 'shift' | undefined) {\n    this._overwrite = overwrite;\n  }\n\n  override get eager (): boolean | 'remove' | 'append' | undefined {\n    return this.currentMask ?\n      this.currentMask.eager :\n      this._eager;\n  }\n\n  override set eager (eager: boolean | 'remove' | 'append' | undefined) {\n    this._eager = eager;\n  }\n\n  override get skipInvalid (): boolean | undefined {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      this._skipInvalid;\n  }\n\n  override set skipInvalid (skipInvalid: boolean | undefined) {\n    this._skipInvalid = skipInvalid;\n  }\n\n  override maskEquals (mask: any): boolean {\n    return Array.isArray(mask) ?\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      }) : super.maskEquals(mask);\n  }\n\n  override typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, { raw: true });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(\n          0,\n          Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)),\n        ),\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import MaskedPattern, { type MaskedPatternOptions } from './pattern';\nimport { AppendFlags } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedEnumOptions = Omit<MaskedPatternOptions, 'mask'> & Pick<MaskedEnum, 'enum'>;\n\nexport\ntype MaskedEnumPatternOptions = MaskedPatternOptions & Partial<Pick<MaskedEnum, 'enum'>>;\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  declare enum: Array<string>;\n\n  constructor (opts?: MaskedEnumOptions) {\n    super(opts as MaskedPatternOptions); // mask will be created in _update\n  }\n\n  override updateOptions (opts: Partial<MaskedEnumOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedEnumOptions>) {\n    const { enum: _enum, ...eopts }: MaskedEnumPatternOptions = opts;\n\n    if (_enum) {\n      const lengths = _enum.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n\n      this.enum = _enum;\n    }\n\n    super._update(eopts);\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) === 0) &&\n      super.doValidate(flags);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","import Masked, { type MaskedOptions } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedFunctionOptions = MaskedOptions<MaskedFunction>;\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction<Value=any> extends Masked<Value> {\n  /** */\n  declare mask: (value: string, masked: Masked) => boolean;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n\n  override updateOptions (opts: Partial<MaskedFunctionOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedFunctionOptions>) {\n    super._update({\n      ...opts,\n      validate: opts.mask,\n    });\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","import { escapeRegExp, type Direction, DIRECTION } from '../core/utils';\nimport ChangeDetails from '../core/change-details';\nimport { type TailDetails } from '../core/tail-details';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base';\nimport IMask from '../core/holder';\n\n\nexport\ntype MaskedNumberOptions = MaskedOptions<MaskedNumber,\n  | 'radix'\n  | 'thousandsSeparator'\n  | 'mapToRadix'\n  | 'scale'\n  | 'min'\n  | 'max'\n  | 'normalizeZeros'\n  | 'padFractionalZeros'\n>;\n\n/** Number mask */\nexport default\nclass MaskedNumber extends Masked<number> {\n  static UNMASKED_RADIX = '.';\n  static EMPTY_VALUES: Array<null | undefined | string | number> = [...Masked.EMPTY_VALUES, 0];\n  static DEFAULTS: Partial<MaskedNumberOptions> = {\n    mask: Number,\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    scale: 2,\n    normalizeZeros: true,\n    padFractionalZeros: false,\n    parse: Number,\n    format: (n: number) => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n  };\n\n  declare mask: NumberConstructor;\n  /** Single char */\n  declare radix: string;\n  /** Single char */\n  declare thousandsSeparator: string;\n  /** Array of single chars */\n  declare mapToRadix: Array<string>;\n  /** */\n  declare min: number;\n  /** */\n  declare max: number;\n  /** Digits after point */\n  declare scale: number;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  declare normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  declare padFractionalZeros: boolean;\n  /** Enable characters overwriting */\n  declare overwrite?: boolean | 'shift' | undefined;\n  /** */\n  declare eager?: boolean | 'remove' | 'append' | undefined;\n  /** */\n  declare skipInvalid?: boolean | undefined;\n  /** Format typed value to string */\n  declare format: (value: number, masked: Masked) => string;\n  /** Parse string to get typed value */\n  declare parse: (str: string, masked: Masked) => number;\n\n  declare _numberRegExp: RegExp;\n  declare _thousandsSeparatorRegExp: RegExp;\n  declare _mapToRadixRegExp: RegExp;\n  declare _separatorsProcessed: boolean;\n\n  constructor (opts?: MaskedNumberOptions) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  override updateOptions (opts: Partial<MaskedNumberOptions>) {\n    super.updateOptions(opts);\n  }\n\n  override _update (opts: Partial<MaskedNumberOptions>) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  _updateRegExps () {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  override doPrepareChar (ch: string, flags: AppendFlags={}): [string, ChangeDetails] {\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    ), flags);\n    if (ch && !prepCh) details.skip = true;\n\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n\n    return [prepCh, details];\n  }\n\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  override extractInput (fromPos: number=0, toPos: number=this.displayValue.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  \n  override _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  \n  override remove (fromPos: number=0, toPos: number=this.displayValue.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  override nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  override doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  override doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  override get unmaskedValue (): string {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  override set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  override get typedValue (): number {\n    return this.parse(this.unmaskedValue, this);\n  }\n\n  override set typedValue (n: number) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n  */\n  get allowNegative (): boolean {\n    return (this.min != null && this.min < 0) || (this.max != null && this.max < 0);\n  }\n\n  /**\n    Is positive allowed\n  */\n  get allowPositive (): boolean {\n    return (this.min != null && this.min > 0) || (this.max != null && this.max > 0);\n  }\n\n  override typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\n\nIMask.MaskedNumber = MaskedNumber;\n","import createMask, { type FactoryArg, type FactoryReturnMasked } from './factory';\nimport IMask from '../core/holder';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n} as const;\n\ntype ValueOf<T> = T[keyof T];\n\ntype TypedValueOf<\n  Opts extends FactoryArg,\n  Type extends ValueOf<typeof PIPE_TYPE>\n> = Type extends (typeof PIPE_TYPE.MASKED | typeof PIPE_TYPE.UNMASKED) ?\n  string :\n  FactoryReturnMasked<Opts>['typedValue']\n;\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe<\n  Arg extends FactoryArg,\n  From extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n  To extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n> (\n  arg: Arg,\n  from: From=PIPE_TYPE.MASKED as From,\n  to: To=PIPE_TYPE.MASKED as To,\n) {\n  const masked = createMask(arg);\n  return (value: TypedValueOf<Arg, From>) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to] as TypedValueOf<Arg, To>;\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe<\n  Arg extends FactoryArg,\n  From extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n  To extends ValueOf<typeof PIPE_TYPE> = typeof PIPE_TYPE.MASKED,\n> (\n  value: TypedValueOf<Arg, From>,\n  mask: Arg,\n  from?: From,\n  to?: To,\n) {\n  return createPipe(mask, from, to)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element';\nexport { default as HTMLInputMaskElement, type InputElement } from './controls/html-input-mask-element';\nexport { default as HTMLMaskElement } from './controls/html-mask-element';\nexport { default as InputMask, type InputMaskElement } from './controls/input';\nexport { default as MaskElement } from './controls/mask-element';\nexport { default as ChangeDetails, type ChangeDetailsOptions } from './core/change-details';\nexport { type AppendTail, type TailDetails } from './core/tail-details';\nexport { DIRECTION, forceDirection, type Direction, type Selection } from './core/utils';\nexport { default as Masked, type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './masked/base';\nexport { default as MaskedDate, type DateMaskType, type MaskedDateOptions } from './masked/date';\nexport { default as MaskedDynamic, type DynamicMaskType, type MaskedDynamicOptions, type MaskedDynamicState } from './masked/dynamic';\nexport { default as MaskedEnum, type MaskedEnumOptions } from './masked/enum';\nexport {\n  default as createMask,\n  normalizeOpts,\n  type AllFactoryStaticOpts,\n  type FactoryArg,\n  type FactoryConstructorOpts,\n  type FactoryConstructorReturnMasked,\n  type FactoryInstanceOpts,\n  type FactoryInstanceReturnMasked,\n  type FactoryOpts,\n  type FactoryReturnMasked,\n  type FactoryStaticOpts,\n  type FactoryStaticReturnMasked,\n  type NormalizedOpts,\n  type UpdateOpts,\n} from './masked/factory';\nexport { default as MaskedFunction, type MaskedFunctionOptions } from './masked/function';\nexport { default as MaskedNumber, type MaskedNumberOptions } from './masked/number';\nexport { default as MaskedPattern, type BlockPosData, type Definitions, type MaskedPatternOptions, type MaskedPatternState } from './masked/pattern';\nexport { type default as PatternBlock } from './masked/pattern/block';\nexport { default as ChunksTailDetails, type ChunksTailState } from './masked/pattern/chunk-tail-details';\nexport { default as PatternFixedDefinition, type PatternFixedDefinitionOptions } from './masked/pattern/fixed-definition';\nexport { default as PatternInputDefinition, type PatternInputDefinitionOptions, type PatternInputDefinitionState } from './masked/pattern/input-definition';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe';\nexport { default as MaskedRange, type MaskedRangeOptions } from './masked/range';\nexport { default as MaskedRegExp, type MaskedRegExpOptions } from './masked/regexp';\n\ntry { (globalThis as any).IMask = IMask; } catch {}\nexport default IMask;\n"],"names":["isString","str","String","isObject","obj","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","value","slice","startChangePos","oldValue","oldSelection","start","cursorPos","end","Math","min","insertedCount","inserted","substr","removedCount","max","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","undefined","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","HTMLMaskElement","EVENTS_MAP","selectionChange","input","drop","click","focus","commit","_handlers","rootElement","getRootNode","document","activeElement","bindEvents","handlers","forEach","event","_toggleEventHandler","unbindEvents","handler","removeEventListener","addEventListener","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","updateOptions","unmaskedValue","updateControl","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","e","listeners","l","_cursorChanging","_changingCursorPos","pos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","on","push","off","hIndex","indexOf","splice","details","oldRawValue","rawInputValue","offset","raw","doCommit","preventDefault","stopPropagation","destroy","ChangeDetails","normalize","prep","rawInserted","skip","tailShift","aggregate","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","DEFAULTS","skipInvalid","EMPTY_VALUES","_update","_initialized","withValueRefresh","_rawInputValue","reset","resolve","flags","parse","format","extractInput","isFilled","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","runIsolated","_isolated","Boolean","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","valLength","tval","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","phDetails","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","minPos","maxPos","appendEager","char","isResolved","PatternInputDefinition","DEFAULT_DEFINITIONS","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","search","STOP_CHAR","ESCAPE_CHAR","InputDefinition","FixedDefinition","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","expose","blockOpts","maskedBlock","isInput","def","maskedState","bi","every","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","MaskedRange","_matchFrom","maxLength","to","autofix","patternOpts","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","nextVal","firstNonZero","GET_DEFAULT_BLOCKS","m","Y","date","day","getDate","month","getMonth","year","getFullYear","split","extractPatternOptions","patternBlocks","bk","isDateExist","currentMask","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","mi","oldMask","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","_enum","eopts","lengths","requiredLength","optionalLength","some","UNMASKED_RADIX","radix","thousandsSeparator","mapToRadix","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","scale","normalizeZeros","padFractionalZeros","n","toLocaleString","useGrouping","maximumFractionDigits","_updateRegExps","allowNegative","mid","_numberRegExp","_mapToRadixRegExp","_thousandsSeparatorRegExp","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","_normalizeZeros","_padFractionalZeros","sign","zeros","test","dropFractional","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","pipe","globalThis"],"mappings":"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"}